// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[11..13], a=aOut, b=bOut, c=cOut, d=dOut, e=eOut, f=fOut, g=gOut, h=hOut);
    RAM4K(in=in, load=aOut, address=address[0..11], out=ram0);
    RAM4K(in=in, load=bOut, address=address[0..11],out=ram1);
    RAM4K(in=in, load=cOut, address=address[0..11],out=ram2);
    RAM4K(in=in, load=dOut, address=address[0..11],out=ram3);
    RAM4K(in=in, load=eOut, address=address[0..11],out=ram4);
    RAM4K(in=in, load=fOut, address=address[0..11],out=ram5);
    RAM4K(in=in, load=gOut, address=address[0..11],out=ram6);
    RAM4K(in=in, load=hOut, address=address[0..11],out=ram7);
    Mux8Way16(a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7, sel=address[11..13], out=out);
}